# ************************************************ Scenario: Rolling Updates in Kunbernetes *******************************************************

# We have an application running on Kubernetes cluster using nginx web server. The Nautilus application development team has pushed some of the latest features to prod branch and those need be deployed. The Nautilus DevOps team has created an image nginx:1.17 with latest changes.

# Perform a rolling update for this application and incorporate nginx:1.17 image. The deployment name is nginx-deployment

# Make sure all pods are up and running after the update.

# Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

# --------------------------------------------------------------------------------------------------------------------------------------------
# Solution:

First check the existing deployments: kubectl get deployments
Check the image and container name currently used in the deployment by running kubectl describe deployment nginx-deployment
Performing a rolling update by running: kubectl set image deployment nginx-deployment nginx-container=nginx:1.19 e.g. Here nginx-deployment is the name of the deployment and nginx-container is the name of the container. Question asked to upgrade to version nginx:1.19.
You can check the rollout deployment status by running kubectl rollout status deployment nginx-deployment as wait until you see 'successfully rolled out' message:
Waiting for rollout to finish: 2 out of 3 newreplicas have been updated...
deployment 'nginx-deployment' successfully rolled out
