# **************************************************** Scenario: Deploy Jenkins on Kubernetes **************************************************
 
# The Nautilus DevOps team is planning to set up a Jenkins CI server to create/manage some deployment pipelines for some of the projects. They want to set up the Jenkins server on Kubernetes cluster. Below you can find more details about the task:

# 1) Create namespace jenkins

# 2) Create a Service for jenkins deployment. Service name should be jenkins-service under jenkins namespace, type should be NodePort, targetport should be 8080 and nodePort should be 30008

# 3) Create a Jenkins Deployment under jenkins namespace, It should be name as jenkins-deployment , labels app should be jenkins , container name should be jenkins-container , use jenkins/jenkins image , containerPort should be 8080 and replicas count should be 1.

# Make sure to wait for pods to be in running state before clicking on Finish button.

# Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

# ------------------------------------------------------------------------------------------------------------------------------------------
# Solution:

# 1. Create namespace
# kubectl create namespace jenkins

# 2. Create deployment with given specification

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  labels:
    app: jenkins
  namespace: jenkins	
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: jenkins-container
        image: jenkins/jenkins
        ports:
        - containerPort: 8080
		
# 3. Create service as per given specification

# kubectl expose deployment jenkins-deployment --namespace=jenkins --type=NodePort --name=jenkins-service --dry-run=client -o yaml >> /home/thor/jenkins_service.yml

# edit the nodePort from the file created in above step
       

#                         (OR)
 
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
spec:
  type: NodePort
  selector:
    app: jenkins
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30008
	  
# 3. Verification

# Verify: kubectl exec <podname> --namespace jenkins
#         -- curl http://localhost:8080/
#         You should see a valid HTML content being returned
# Verify: Open Jenkins app on browser by clicking 'Open Port on Host 1'	  



