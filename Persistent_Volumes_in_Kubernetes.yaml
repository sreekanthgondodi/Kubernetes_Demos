# *************************************** Scenario: Persistent Volumes in Kubernetes ************************************************************

# The Nautilus DevOps team is working on a Kubernetes template to deploy a web application on the cluster. There are some requirements to create/use persistent volumes to store the application code, and the template needs to be designed accordingly. Please find more details below:

# Create a PersistentVolume named as pv-xfusion. Configure the spec as storage class should be manual, set capacity to 3Gi, set access mode to ReadWriteOnce, volume type should be hostPath and set path to /mnt/dba (this directory is already created, you might not be able to access it directly, so you need not to worry about it).

# Create a PersistentVolumeClaim named as pvc-xfusion. Configure the spec as storage class should be manual, request 3Gi of the storage, set access mode to ReadWriteOnce.

# Create a pod named as pod-xfusion, mount the persistent volume you created with claim name pvc-xfusion at document root of the web server, the container within the pod should be named as container-xfusion using image nginx with latest tag only (remember to mention the tag i.e nginx:latest).

# Create a node port type service named web-xfusion using node port 30008 to expose the web server running within the pod.

# Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.
# ------------------------------------------------------------------------------------------------------------------------------------------
# Solution:

# 1. Create Persistent Volume as per the specifications

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-xfusion
spec:
  storageClassName: manual
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/dba"
---	

# 2. Create PersistentVolumeClaim as per the specifications	
	
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-xfusion
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---	  

# 3. Create Pod as per the specifications	  
	  
	  
apiVersion: v1
kind: Pod
metadata:
  name: pod-xfusion
  labels:
    app: web-server
spec:	
  containers:
    - name: container-xfusion
      image: nginx:latest
	  ports:
	  - containerPort: 80
	    name: web
      volumeMounts:
      - mountPath: "/var/www/html"
        name: my-mount
  volumes:
    - name: my-mount
      persistentVolumeClaim:
        claimName: pvc-xfusion 
		
---		

# 3. Create service from Pod as per the specifications	

# kubectl expose pod pod-xfusion --name=web-xfusion --dry-run=client -o yaml >> /home/thor/svc.yml

# edit service to add type and node port as per the question

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: web-server
  name: web-xfusion
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
    nodePort: 30008
  selector:
    app: web-server		
---
# 4. Verify the changes
# View port using node port: 30008. You should be able to see nginx home page
	
